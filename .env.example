# ==============================================================================
# ENVIRONMENT CONFIGURATION TEMPLATE - NYC Records Management System
# ==============================================================================
# This is a template file showing all required and optional environment variables.
# 
# SETUP INSTRUCTIONS:
# 1. Copy this file to .env: cp .env.example .env
# 2. Replace all placeholder values with your actual credentials
# 3. Never commit the .env file to version control
#
# For production deployment, set these as environment variables instead of using .env

# ------------------------------------------------------------------------------
# STORAGE CONFIGURATION (REQUIRED)
# ------------------------------------------------------------------------------
# Choose your storage backend: 'local' for local file storage or 'cloudinary' for cloud storage
# 
# Local Storage (STORAGE_TYPE=local):
# - Files stored in static/files/ directory
# - Good for development or small deployments
# - No external dependencies
# - No Cloudinary credentials needed
#
# Cloudinary Storage (STORAGE_TYPE=cloudinary):  
# - Files stored in Cloudinary cloud service
# - Good for production deployments
# - Requires Cloudinary account and API credentials (see below)
#
STORAGE_TYPE=local
LOCAL_STORAGE_PATH=static/files

# ------------------------------------------------------------------------------
# CLOUDINARY CONFIGURATION (ONLY REQUIRED if STORAGE_TYPE=cloudinary)
# ------------------------------------------------------------------------------
# Cloudinary is used for file storage and management of newsletter templates
# 
# IMPORTANT: These credentials are ONLY needed if you set STORAGE_TYPE=cloudinary above.
# If you're using STORAGE_TYPE=local, you can leave these blank or remove them entirely.
#
# Setup Instructions for Cloudinary storage:
# 1. Create account at: https://cloudinary.com/
# 2. Go to console: https://cloudinary.com/console
# 3. Copy your Cloud Name, API Key, and API Secret
#
# Example values:
# CLOUDINARY_CLOUD_NAME=my-company-cloud
# CLOUDINARY_API_KEY=123456789012345
# CLOUDINARY_API_SECRET=AbCdEfGhIjKlMnOpQrStUvWxYz-1234567
CLOUDINARY_CLOUD_NAME=your_cloud_name_here
CLOUDINARY_API_KEY=your_api_key_here  
CLOUDINARY_API_SECRET=your_api_secret_here

# ------------------------------------------------------------------------------
# FLASK APPLICATION SECURITY (REQUIRED)
# ------------------------------------------------------------------------------
# Secret key used for session management, CSRF protection, and secure cookies
# 
# IMPORTANT: Use a long, random, and unique secret key for each environment
# 
# Generate a secure key with one of these methods:
# Method 1: python -c "import secrets; print(secrets.token_hex(32))"
# Method 2: python -c "import os; print(os.urandom(32).hex())"
# Method 3: openssl rand -hex 32
#
# Example: abc123def456ghi789jkl012mno345pqr678stu901vwx234yz567890abcdef
FLASK_SECRET_KEY=your_long_random_secret_key_here

# ------------------------------------------------------------------------------
# PDF CONVERSION SERVICE (OPTIONAL)
# ------------------------------------------------------------------------------
# Browserless.io provides cloud-based browser automation for HTML-to-PDF conversion
# 
# Setup Instructions:
# 1. Create account at: https://www.browserless.io/
# 2. Get your API token from the dashboard
# 
# If not provided, the application will fall back to local browser automation
# using Playwright (requires local Chrome/Chromium installation)
#
# Example: 1a2b3c4d5e6f7g8h9i0j1k2l3m4n5o6p7q8r9s0t1u2v3w4x5y6z
BROWSERLESS_TOKEN=your_browserless_token_here

# ------------------------------------------------------------------------------
# JUICE SERVER CONFIGURATION (REQUIRED)
# ------------------------------------------------------------------------------
# The Juice server handles CSS inlining and ID cleanup for newsletter export
# 
# Setup Instructions:
# 1. Deploy the juice_server directory to Vercel or your preferred platform
# 2. Update this URL to point to your deployed Juice server
# 
# Default for local development: http://localhost:3000
# Production example: https://your-juice-server.vercel.app
#
# IMPORTANT: Do not include trailing slash
JUICE_SERVER_URL=https://your-juice-server.vercel.app or http://localhost:3000

# ------------------------------------------------------------------------------
# FLASK DEVELOPMENT SETTINGS (OPTIONAL)
# ------------------------------------------------------------------------------
# These settings control Flask's runtime behavior
# Remove the # to uncomment and use custom values

# Application environment: development, production, testing
# FLASK_ENV=development

# Enable/disable debug mode (shows detailed error pages)
# WARNING: Never enable debug mode in production!
# FLASK_DEBUG=true

# Port for the Flask development server
# FLASK_PORT=5002

# ------------------------------------------------------------------------------
# PRODUCTION DEPLOYMENT NOTES
# ------------------------------------------------------------------------------
# For production environments:
# 
# 1. Set FLASK_ENV=production
# 2. Set FLASK_DEBUG=false (or omit entirely)
# 3. Use a production WSGI server (Gunicorn, uWSGI, etc.) instead of Flask dev server
# 4. Set environment variables directly on your hosting platform
# 5. Use a strong, unique FLASK_SECRET_KEY for each environment
# 6. Choose appropriate STORAGE_TYPE for your deployment:
#    - Use 'local' for simple deployments or development
#    - Use 'cloudinary' for scalable production deployments
# 7. Consider using environment-specific Cloudinary accounts
# 
# Example production deployment:
# FLASK_ENV=production
# FLASK_DEBUG=false
# FLASK_PORT=8000
# STORAGE_TYPE=cloudinary
